import { useEffect, useState } from "react";
import { getCachedWeather } from "../utils/weatherCache"; // –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –ø–æ–ª—É—á–µ–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö
import { loadHourlyWeatherData } from "../database/db"; // –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö –∏–∑ –±–∞–∑—ã
import AsyncStorage from "@react-native-async-storage/async-storage";

// –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ
interface WeatherData {
  daily: any[];   // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å `any` –Ω–∞ —Ç–æ—á–Ω—ã–π —Ç–∏–ø, –µ—Å–ª–∏ –µ—Å—Ç—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–Ω—ã—Ö
  hourly: any[];
}

export const useWeatherLoader = () => {
  const [weatherData, setWeatherData] = useState<WeatherData>({ daily: [], hourly: [] });
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    const loadWeather = async () => {
      setLoading(true);
      try {
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ –∏–∑ –∫–µ—à–∞ –∏–ª–∏ API
        const data = await getCachedWeather();
        console.log("üì¶ –î–∞–Ω–Ω—ã–µ –ø–æ–≥–æ–¥—ã:", data);

        // –ï—Å–ª–∏ –≤ –¥–∞–Ω–Ω—ã—Ö –æ –ø–æ–≥–æ–¥–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –ø–æ—á–∞—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ, –ø—ã—Ç–∞–µ–º—Å—è –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏—Ö –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
        if (!data.hourly || data.hourly.length === 0) {
          const locationId = await AsyncStorage.getItem("locationId");
          if (locationId) {
            // –ï—Å–ª–∏ locationId –Ω–∞–π–¥–µ–Ω, –∑–∞–≥—Ä—É–∂–∞–µ–º –ø–æ—á–∞—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
            const fallbackHourly = await loadHourlyWeatherData(locationId);
            if (fallbackHourly?.length) {
              data.hourly = fallbackHourly;  // –ò—Å–ø–æ–ª—å–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–∞–∑—ã
            } else {
              setError("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ—á–∞—Å–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö");
            }
          } else {
            setError("–ù–µ –Ω–∞–π–¥–µ–Ω–æ locationId –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö");
          }
        }

        // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ —Å –ø–æ–ª—É—á–µ–Ω–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏
        setWeatherData(data);
      } catch (err) {
        setError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ");
        console.error("useWeatherLoader error:", err);
      } finally {
        setLoading(false);
      }
    };

    loadWeather(); // –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É –¥–∞–Ω–Ω—ã—Ö
  }, []); // –ü—É—Å—Ç–æ–π –º–∞—Å—Å–∏–≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π, —á—Ç–æ–±—ã —ç—Ñ—Ñ–µ–∫—Ç —Å—Ä–∞–±–æ—Ç–∞–ª –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –º–æ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏

  return { weatherData, loading, error };
};
